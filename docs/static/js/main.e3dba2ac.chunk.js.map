{"version":3,"sources":["components/CategoryAdd.js","components/GifGridItem.js","helpers/getGifs.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["CategoryAdd","setCategorias","useState","inputValue","setInputValue","onSubmit","evt","preventDefault","trim","length","categ","name","type","value","onChange","target","GifGridItem","title","url","className","src","alt","getGifs","a","fetch","resp","json","data","map","id","images","downsized_medium","gifs","GifGrid","categoria","loading","state","setState","useEffect","then","imgs","useFetchGifs","imagesList","ele","key","toUpperCase","GifExpertApp","categorias","categList","index","ReactDOM","render","document","getElementById"],"mappings":"qMAkCeA,EA/BK,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EACLC,mBAAS,IADJ,mBAClCC,EADkC,KACtBC,EADsB,KAezC,OACE,0BAAMC,SATa,SAACC,GACpBA,EAAIC,iBACAJ,EAAWK,OAAOC,OAAS,IAC7BR,GAAc,SAACS,GAAD,OAAYP,GAAZ,mBAA2BO,OACzCN,EAAc,OAMd,2BACEO,KAAK,YACLC,KAAK,OACLC,MAAOV,EACPW,SAlBoB,SAAC,GAA2B,IAAfD,EAAc,EAAxBE,OAAUF,MACrCT,EAAcS,QCIHG,EATK,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,IAC5B,OACE,yBAAKC,UAAU,0CACb,yBAAKC,IAAKF,EAAKG,IAAKJ,IACpB,2BAAIA,K,uBCNGK,EAAO,uCAAG,WAAOZ,GAAP,uBAAAa,EAAA,4DACN,mCAED,GAERL,EALe,iDAENR,EAFM,kBAGP,GAHO,oBACN,oCADM,SAMFc,MAAMN,GANJ,cAMfO,EANe,gBAOEA,EAAKC,OAPP,uBAObC,EAPa,EAObA,KAPa,UASFA,EAAKC,KACtB,YAOE,MAAO,CAAEC,GADL,EALJA,GAMaZ,MADT,EAJJA,MAKoBC,IADhB,EAHJY,OACEC,iBAAoBb,QAdL,eASfc,EATe,yBAoBdA,GApBc,4CAAH,sDCqBLC,EAjBC,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,UAAgB,ECDP,SAACA,GAAe,IAAD,EACfhC,mBAAS,CACjCyB,KAAM,GACNQ,SAAS,IAH8B,mBAClCC,EADkC,KAC3BC,EAD2B,KAezC,OATAC,qBAAU,WACRhB,EAAQY,GAAWK,MAAK,SAACC,GACvBH,EAAS,CACPV,KAAMa,EACNL,SAAS,SAGZ,CAACD,IAEGE,EDbmBK,CAAaP,GAA/BP,EADyB,EACzBA,KAAMQ,EADmB,EACnBA,QAERO,EAAaf,EAAKC,KAAI,SAACe,GAAD,OAAS,kBAAC,EAAD,eAAaC,IAAKD,EAAId,IAAQc,OAEnE,OACE,oCACE,6BACA,wBAAIxB,UAAU,qCACXe,EAAUW,eAEZV,GAAW,wBAAIhB,UAAU,oCAAd,gBACZ,yBAAKA,UAAU,aAAauB,KEMnBI,EAlBM,WAAO,IAAD,EACW5C,mBAAS,CAAC,WADrB,mBAClB6C,EADkB,KACN9C,EADM,KAGnB+C,EAAYD,EAAWnB,KAAI,SAACe,EAAKM,GACrC,OAAO,kBAAC,EAAD,CAASL,IAAKK,EAAOf,UAAWS,OAGzC,OACE,oCACE,4CACA,kBAAC,EAAD,CAAa1C,cAAeA,IAC5B,6BACA,6BACC+C,I,YCXPE,IAASC,OAAO,kBAAC,EAAD,MAAkBC,SAASC,eAAe,U","file":"static/js/main.e3dba2ac.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst CategoryAdd = ({ setCategorias }) => {\r\n  const [inputValue, setInputValue] = useState(\"\");\r\n\r\n  const handleInputChange = ({ target: { value } }) => {\r\n    setInputValue(value);\r\n  };\r\n\r\n  const handleSubmit = (evt) => {\r\n    evt.preventDefault();\r\n    if (inputValue.trim().length > 2) {\r\n      setCategorias((categ) => [inputValue, ...categ]);\r\n      setInputValue(\"\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <input\r\n        name=\"categoria\"\r\n        type=\"text\"\r\n        value={inputValue}\r\n        onChange={handleInputChange}\r\n      />\r\n    </form>\r\n  );\r\n};\r\n\r\nCategoryAdd.propTypes = {\r\n  setCategorias: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default CategoryAdd;\r\n","import React from \"react\";\r\n\r\nconst GifGridItem = ({ title, url }) => {\r\n  return (\r\n    <div className=\"card animate__animated animate__fadeIn\">\r\n      <img src={url} alt={title} />\r\n      <p>{title}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GifGridItem;\r\n","export const getGifs = async (categ) => {\r\n  const apiKey = \"F0jWBAsOwhJAQDVKhBUoFSlajLdXDDFn\";\r\n  const filter = categ;\r\n  const limit = 10;\r\n\r\n  const url = `https://api.giphy.com/v1/gifs/search?q=${filter}&limit=${limit}&api_key=${apiKey}`;\r\n  const resp = await fetch(url);\r\n  const { data } = await resp.json();\r\n\r\n  const gifs = await data.map(\r\n    ({\r\n      id,\r\n      title,\r\n      images: {\r\n        downsized_medium: { url },\r\n      },\r\n    }) => {\r\n      return { id, title, url };\r\n    }\r\n  );\r\n  return gifs;\r\n};\r\n","import React from \"react\";\r\nimport GifGridItem from \"./GifGridItem\";\r\nimport { useFetchGifs } from \"../hooks/useFetchGifs\";\r\n\r\nconst GifGrid = ({ categoria }) => {\r\n  const { data, loading } = useFetchGifs(categoria);\r\n\r\n  const imagesList = data.map((ele) => <GifGridItem key={ele.id} {...ele} />);\r\n\r\n  return (\r\n    <>\r\n      <hr />\r\n      <h3 className=\"animate__animated animate__fadeIn\">\r\n        {categoria.toUpperCase()}\r\n      </h3>\r\n      {loading && <h4 className=\"animate__animated animate__flush\">Cargando ...</h4>}\r\n      <div className=\"card-grid\">{imagesList}</div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default GifGrid;\r\n","import { useState, useEffect } from \"react\";\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = (categoria) => {\r\n  const [state, setState] = useState({\r\n    data: [],\r\n    loading: true,\r\n  });\r\n\r\n  useEffect(() => {\r\n    getGifs(categoria).then((imgs) => {\r\n      setState({\r\n        data: imgs,\r\n        loading: false,\r\n      });\r\n    });\r\n  }, [categoria]);\r\n\r\n  return state;\r\n};\r\n","import React, { useState } from \"react\";\r\nimport CategoryAdd from \"./components/CategoryAdd\";\r\nimport GifGrid from \"./components/GifGrid\";\r\n\r\nconst GifExpertApp = () => {\r\n  const [categorias, setCategorias] = useState([\"Naruto\"]);\r\n\r\n  const categList = categorias.map((ele, index) => {\r\n    return <GifGrid key={index} categoria={ele} />;\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <h2>GifExpertApp</h2>\r\n      <CategoryAdd setCategorias={setCategorias} />\r\n      <br />\r\n      <hr />\r\n      {categList}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default GifExpertApp;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport GifExpertApp from \"./GifExpertApp\";\nimport \"./index.css\";\nimport \"animate.css\";\n\nReactDOM.render(<GifExpertApp />, document.getElementById(\"root\"));\n"],"sourceRoot":""}